version: 2
jobs:
  build-backend:
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker Compose
          command: |
            apk add --update python py-pip git openssh docker
            pip install docker-compose
      - run:
          name: Extract gcloud credentials and activate service account
          command: |
            echo $ACCT_AUTH | base64 -d > account-auth.json
            gcloud auth activate-service-account --key-file account-auth.json
            gcloud auth configure-docker
      - restore_cache:
          key: project_api-{{ .Branch }}
          paths:
            - project_api.tar
      - run:
          name: Load docker image layer cache
          command: |
            set +o pipefail
            docker load -i project_api.tar | true
      - run:
          name: Build image
          command: docker-compose build api
      - run:
          name: Run api tests
          command: |
            docker-compose run api bash -c "pytest -s -vv --cov=api/  --cov-report html:htmlcov"
            docker cp project_api_run_1:/usr/src/app/htmlcov .
      - store_artifacts:
          path: htmlcov

      - run:
          name: Save swagger api spec
          command: |
            docker-compose up -d
            sleep 15
            docker exec project_api_1 curl --connect-timeout 5 \
              --max-time 10 \
              --retry 5 \
              --retry-delay 0 \
              --retry-max-time 40 \
              --retry-connrefused \
              http://localhost:8000/swagger.json > swagger.json
      - run:
          name: Save docker cache
          command: docker save project_api -o project_api.tar

      - save_cache:
          key: project_api-{{ .Branch }}
          paths:
            - project_api.tar

      - persist_to_workspace:
         root: .
         paths:
            - swagger.json


  build-frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run:
          name: Install java for swagger
          command: |
            sudo apt update
            sudo apt install default-jre

      - attach_workspace:
          at: .
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/package.json" }}
      - run:
          name: Setup Dependencies
          command: yarn install
          pwd: frontend
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/package.json" }}
          paths:
            - ./frontend/node_modules
      - run:
          name: Generate SDK from swagger spec
          command: yarn run codegen-ci
          pwd: frontend
      - run:
          name: Build
          command: yarn build
          pwd: frontend
      - run:
          name: Test
          command: yarn test
          pwd: frontend

workflows:
  version: 2
  build:
    jobs:
      - build-backend:
          context: Development

      - build-frontend:
          requires:
            - build-backend

